name: Deploy Node Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.4

      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            -t afridp/eventbrigadge-server \
            --build-arg API_KEY="${{ secrets.API_KEY }}" \
            --build-arg API_SECRET="${{ secrets.API_SECRET }}" \
            --build-arg CLOUD_NAME="${{ secrets.CLOUD_NAME }}" \
            --build-arg DEV_SMTP_EMAIL="${{ secrets.DEV_SMTP_EMAIL }}" \
            --build-arg DEV_SMTP_PASSCODE="${{ secrets.DEV_SMTP_PASSCODE }}" \
            --build-arg MONGO_URI="${{ secrets.MONGO_URI }}" \
            --build-arg STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
            --build-arg TOKEN_KEY="${{ secrets.TOKEN_KEY }}" \
            .

      - name: Publish Image to docker hub
        run: docker push afridp/eventbrigadge-server:latest
        
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull afridp/eventbrigadge-server:latest

      - name: Ensure SSL certificates directory exists
        run: mkdir -p ~/ssl-certs

      - name: Deploy SSL certificate
        run: echo "${{ secrets.CLOUDFLARE_CERT }}" > ~/ssl-certs/cloudflare-cert.pem

      - name: Deploy SSL key
        run: echo "${{ secrets.CLOUDFLARE_KEY }}" > ~/ssl-certs/cloudflare-key.pem

      - name: Delete old runnig container
        run: docker rm -f eventserver-app-container

      - name: run Docker Container
        run: |
          docker run -d \
          -p 8080:80 \
          -p 8443:443 \
          --name eventserver-app-container \
          -v ~/ssl-certs/cloudflare-cert.pem:/etc/nginx/ssl/cloudflare-cert.pem \
          -v ~/ssl-certs/cloudflare-key.pem:/etc/nginx/ssl/cloudflare-key.pem \
          afridp/eventbrigadge-server:latest

        
  # deploy:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull afridp/eventbrigadge-server:latest

  #     - name: Delete old running container
  #       run: docker rm -f eventserver-app-container

  #     - name: Create SSL directory
  #       run: sudo mkdir -p /etc/nginx/ssl

  #     - name: Write SSL certificate to file
  #       run: |
  #         sudo -E sh -c "echo '${{ secrets.CLOUDFLARE_CERT }}' | base64 -d > /etc/nginx/ssl/cloudflare-cert.pem"
  #         sudo chmod 644 /etc/nginx/ssl/cloudflare-cert.pem

  #     - name: Write SSL private key to file
  #       run: |
  #         sudo -E sh -c "echo '${{ secrets.CLOUDFLARE_KEY }}' | base64 -d > /etc/nginx/ssl/cloudflare-key.pem"
  #         sudo chmod 600 /etc/nginx/ssl/cloudflare-key.pem

  #     - name: Run Docker Container
  #       run: |
  #         docker run -d -p 4000:4000 \
  #           -v /etc/nginx/ssl:/etc/nginx/ssl \
  #           --name eventserver-app-container \
  #           afridp/eventbrigadge-server:latest

  #     - name: Run Docker Container
  #       run: |
  #         docker run -d -p 4000:4000 \
  #           -v /etc/nginx/ssl:/etc/nginx/ssl \
  #           --name eventserver-app-container \
  #           afridp/eventbrigadge-server:latest

  #     - name: Run Docker Container
  #       run: |
  #         docker run -d -p 4000:4000 \
  #           -v /etc/nginx/ssl:/etc/nginx/ssl \
  #           --name eventserver-app-container \
  #           afridp/eventbrigadge-server:latest

  #     - name: Run Docker Container
  #       run: |
  #         docker run -d -p 4000:4000 \
  #           -v /ssl:/etc/nginx/ssl \
  #           --name eventserver-app-container \
  #           afridp/eventbrigadge-server:latest

  #     - name: Run Docker Container
  #       run: |
  #         docker run -d -p 4000:4000 \
  #           -v /etc/nginx/ssl:/etc/nginx/ssl \
  #           --name eventserver-app-container \
  #           afridp/eventbrigadge-server:latest

  # deploy:
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull afridp/eventbrigadge-server:latest
  #     - name: Delete old runnig container
  #       run: docker rm -f eventserver-app-container
  #     - name: run Docker Container
  #       run: docker run -d -p 4000:4000 --name eventserver-app-container afridp/eventbrigadge-server:latest
